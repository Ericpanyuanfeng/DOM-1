{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node1","node2","parentNode","insertBefore","nextSibling","before","append","parent","node","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n\r\n    //  增\r\n    create(string) { // 新建标签和里面的内容\r\n        const container = document.createElement(\"template\"); // template 是可以包含任何 HTML 标签的标签\r\n        container.innerHTML = string.trim(); // trim() 是用于去除字符串头尾的空格\r\n        return container.content.firstChild;\r\n    },\r\n    after(node1, node2) { // 将 node2 插入到 node1 的后面\r\n        node1.parentNode.insertBefore(node2, node1.nextSibling);\r\n    },\r\n    before(node1, node2) { // 将 node2 插入到 node1 的前面\r\n        node1.parentNode.insertBefore(node2, node1)\r\n    },\r\n    append(parent, node) { // 在 parent 里面添加 node\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node, parent) { // 在父级和子级中间插入一级\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },\r\n\r\n    // 删\r\n    remove(node) { // 移除一个节点\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) { // 移除一个节点下的所有子节点\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n            return array\r\n        }\r\n    },\r\n\r\n    // 改\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) { // 如果参数有三个，就是改\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) { // 如果参数有两个，就是查（这就是重载）\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string) {\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) { // 如果 node 里面有 innerText，就执行\r\n                node.innerText = string\r\n            } else {\r\n                node.textContent = string; //否则就执行 textContent （这就是适配）\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.textContent = string;\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value // 如果 style 的值是变量，那需要用[]把变量包起来\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n\r\n    // 查\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node, parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};"]}